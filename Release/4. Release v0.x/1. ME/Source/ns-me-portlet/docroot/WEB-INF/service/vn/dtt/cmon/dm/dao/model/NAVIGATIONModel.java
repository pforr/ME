/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.cmon.dm.dao.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the NAVIGATION service. Represents a row in the &quot;DM_NAVIGATION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.cmon.dm.dao.model.impl.NAVIGATIONModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.cmon.dm.dao.model.impl.NAVIGATIONImpl}.
 * </p>
 *
 * @author khoa.vu
 * @see NAVIGATION
 * @see vn.dtt.cmon.dm.dao.model.impl.NAVIGATIONImpl
 * @see vn.dtt.cmon.dm.dao.model.impl.NAVIGATIONModelImpl
 * @generated
 */
public interface NAVIGATIONModel extends BaseModel<NAVIGATION> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a n a v i g a t i o n model instance should use the {@link NAVIGATION} interface instead.
	 */

	/**
	 * Returns the primary key of this n a v i g a t i o n.
	 *
	 * @return the primary key of this n a v i g a t i o n
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this n a v i g a t i o n.
	 *
	 * @param primaryKey the primary key of this n a v i g a t i o n
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this n a v i g a t i o n.
	 *
	 * @return the ID of this n a v i g a t i o n
	 */
	public long getId();

	/**
	 * Sets the ID of this n a v i g a t i o n.
	 *
	 * @param id the ID of this n a v i g a t i o n
	 */
	public void setId(long id);

	/**
	 * Returns the name of this n a v i g a t i o n.
	 *
	 * @return the name of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this n a v i g a t i o n.
	 *
	 * @param name the name of this n a v i g a t i o n
	 */
	public void setName(String name);

	/**
	 * Returns the nav sub of this n a v i g a t i o n.
	 *
	 * @return the nav sub of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getNavSub();

	/**
	 * Sets the nav sub of this n a v i g a t i o n.
	 *
	 * @param navSub the nav sub of this n a v i g a t i o n
	 */
	public void setNavSub(String navSub);

	/**
	 * Returns the nav sub owner of this n a v i g a t i o n.
	 *
	 * @return the nav sub owner of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getNavSubOwner();

	/**
	 * Sets the nav sub owner of this n a v i g a t i o n.
	 *
	 * @param navSubOwner the nav sub owner of this n a v i g a t i o n
	 */
	public void setNavSubOwner(String navSubOwner);

	/**
	 * Returns the role owner of this n a v i g a t i o n.
	 *
	 * @return the role owner of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getRoleOwner();

	/**
	 * Sets the role owner of this n a v i g a t i o n.
	 *
	 * @param roleOwner the role owner of this n a v i g a t i o n
	 */
	public void setRoleOwner(String roleOwner);

	/**
	 * Returns the permission owner of this n a v i g a t i o n.
	 *
	 * @return the permission owner of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getPermissionOwner();

	/**
	 * Sets the permission owner of this n a v i g a t i o n.
	 *
	 * @param permissionOwner the permission owner of this n a v i g a t i o n
	 */
	public void setPermissionOwner(String permissionOwner);

	/**
	 * Returns the parent ID of this n a v i g a t i o n.
	 *
	 * @return the parent ID of this n a v i g a t i o n
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this n a v i g a t i o n.
	 *
	 * @param parentId the parent ID of this n a v i g a t i o n
	 */
	public void setParentId(long parentId);

	/**
	 * Returns the hidden of this n a v i g a t i o n.
	 *
	 * @return the hidden of this n a v i g a t i o n
	 */
	public long getHidden();

	/**
	 * Sets the hidden of this n a v i g a t i o n.
	 *
	 * @param hidden the hidden of this n a v i g a t i o n
	 */
	public void setHidden(long hidden);

	/**
	 * Returns the order of this n a v i g a t i o n.
	 *
	 * @return the order of this n a v i g a t i o n
	 */
	public long getOrder();

	/**
	 * Sets the order of this n a v i g a t i o n.
	 *
	 * @param order the order of this n a v i g a t i o n
	 */
	public void setOrder(long order);

	/**
	 * Returns the thong ke of this n a v i g a t i o n.
	 *
	 * @return the thong ke of this n a v i g a t i o n
	 */
	@AutoEscape
	public String getThongKe();

	/**
	 * Sets the thong ke of this n a v i g a t i o n.
	 *
	 * @param thongKe the thong ke of this n a v i g a t i o n
	 */
	public void setThongKe(String thongKe);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(NAVIGATION navigation);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NAVIGATION> toCacheModel();

	@Override
	public NAVIGATION toEscapedModel();

	@Override
	public NAVIGATION toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}