/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.sol.ns.baocaodli.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI;
import vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLIModel;
import vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLISoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BaoCaoDLI service. Represents a row in the &quot;ME_BAOCAODLI&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLIModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BaoCaoDLIImpl}.
 * </p>
 *
 * @author HuyMQ
 * @see BaoCaoDLIImpl
 * @see vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI
 * @see vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLIModel
 * @generated
 */
@JSON(strict = true)
public class BaoCaoDLIModelImpl extends BaseModelImpl<BaoCaoDLI>
	implements BaoCaoDLIModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bao cao d l i model instance should use the {@link vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI} interface instead.
	 */
	public static final String TABLE_NAME = "ME_BAOCAODLI";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "MATINH", Types.VARCHAR },
			{ "NAM", Types.INTEGER },
			{ "LOAIBAOCAO", Types.INTEGER },
			{ "NGUOILAP", Types.VARCHAR },
			{ "NGUOIDUYET", Types.VARCHAR },
			{ "SOBAOCAO", Types.VARCHAR },
			{ "NGAYBAOCAO", Types.TIMESTAMP },
			{ "TRANGTHAI", Types.INTEGER },
			{ "LUUTRUPDF_1", Types.BIGINT },
			{ "LUUTRUPDF_2", Types.BIGINT },
			{ "LUUTRUCSV_1", Types.BIGINT },
			{ "LUUTRUCSV_2", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ME_BAOCAODLI (ID LONG not null primary key,MATINH VARCHAR(75) null,NAM INTEGER,LOAIBAOCAO INTEGER,NGUOILAP VARCHAR(75) null,NGUOIDUYET VARCHAR(75) null,SOBAOCAO VARCHAR(75) null,NGAYBAOCAO DATE null,TRANGTHAI INTEGER,LUUTRUPDF_1 LONG,LUUTRUPDF_2 LONG,LUUTRUCSV_1 LONG,LUUTRUCSV_2 LONG)";
	public static final String TABLE_SQL_DROP = "drop table ME_BAOCAODLI";
	public static final String ORDER_BY_JPQL = " ORDER BY baoCaoDLI.nam DESC, baoCaoDLI.maTinh ASC, baoCaoDLI.ngayBaoCao DESC";
	public static final String ORDER_BY_SQL = " ORDER BY ME_BAOCAODLI.NAM DESC, ME_BAOCAODLI.MATINH ASC, ME_BAOCAODLI.NGAYBAOCAO DESC";
	public static final String DATA_SOURCE = "dmDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI"),
			true);
	public static long ID_COLUMN_BITMASK = 1L;
	public static long LOAIBAOCAO_COLUMN_BITMASK = 2L;
	public static long MATINH_COLUMN_BITMASK = 4L;
	public static long NAM_COLUMN_BITMASK = 8L;
	public static long TRANGTHAI_COLUMN_BITMASK = 16L;
	public static long NGAYBAOCAO_COLUMN_BITMASK = 32L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BaoCaoDLI toModel(BaoCaoDLISoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BaoCaoDLI model = new BaoCaoDLIImpl();

		model.setId(soapModel.getId());
		model.setMaTinh(soapModel.getMaTinh());
		model.setNam(soapModel.getNam());
		model.setLoaiBaoCao(soapModel.getLoaiBaoCao());
		model.setNguoiLap(soapModel.getNguoiLap());
		model.setNguoiDuyet(soapModel.getNguoiDuyet());
		model.setSoBaoCao(soapModel.getSoBaoCao());
		model.setNgayBaoCao(soapModel.getNgayBaoCao());
		model.setTrangThai(soapModel.getTrangThai());
		model.setLuuTruPDF1Id(soapModel.getLuuTruPDF1Id());
		model.setLuuTruPDF2Id(soapModel.getLuuTruPDF2Id());
		model.setLuuTruCSV1Id(soapModel.getLuuTruCSV1Id());
		model.setLuuTruCSV2Id(soapModel.getLuuTruCSV2Id());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BaoCaoDLI> toModels(BaoCaoDLISoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BaoCaoDLI> models = new ArrayList<BaoCaoDLI>(soapModels.length);

		for (BaoCaoDLISoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI"));

	public BaoCaoDLIModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BaoCaoDLI.class;
	}

	@Override
	public String getModelClassName() {
		return BaoCaoDLI.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maTinh", getMaTinh());
		attributes.put("nam", getNam());
		attributes.put("loaiBaoCao", getLoaiBaoCao());
		attributes.put("nguoiLap", getNguoiLap());
		attributes.put("nguoiDuyet", getNguoiDuyet());
		attributes.put("soBaoCao", getSoBaoCao());
		attributes.put("ngayBaoCao", getNgayBaoCao());
		attributes.put("trangThai", getTrangThai());
		attributes.put("luuTruPDF1Id", getLuuTruPDF1Id());
		attributes.put("luuTruPDF2Id", getLuuTruPDF2Id());
		attributes.put("luuTruCSV1Id", getLuuTruCSV1Id());
		attributes.put("luuTruCSV2Id", getLuuTruCSV2Id());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		Integer nam = (Integer)attributes.get("nam");

		if (nam != null) {
			setNam(nam);
		}

		Integer loaiBaoCao = (Integer)attributes.get("loaiBaoCao");

		if (loaiBaoCao != null) {
			setLoaiBaoCao(loaiBaoCao);
		}

		String nguoiLap = (String)attributes.get("nguoiLap");

		if (nguoiLap != null) {
			setNguoiLap(nguoiLap);
		}

		String nguoiDuyet = (String)attributes.get("nguoiDuyet");

		if (nguoiDuyet != null) {
			setNguoiDuyet(nguoiDuyet);
		}

		String soBaoCao = (String)attributes.get("soBaoCao");

		if (soBaoCao != null) {
			setSoBaoCao(soBaoCao);
		}

		Date ngayBaoCao = (Date)attributes.get("ngayBaoCao");

		if (ngayBaoCao != null) {
			setNgayBaoCao(ngayBaoCao);
		}

		Integer trangThai = (Integer)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Long luuTruPDF1Id = (Long)attributes.get("luuTruPDF1Id");

		if (luuTruPDF1Id != null) {
			setLuuTruPDF1Id(luuTruPDF1Id);
		}

		Long luuTruPDF2Id = (Long)attributes.get("luuTruPDF2Id");

		if (luuTruPDF2Id != null) {
			setLuuTruPDF2Id(luuTruPDF2Id);
		}

		Long luuTruCSV1Id = (Long)attributes.get("luuTruCSV1Id");

		if (luuTruCSV1Id != null) {
			setLuuTruCSV1Id(luuTruCSV1Id);
		}

		Long luuTruCSV2Id = (Long)attributes.get("luuTruCSV2Id");

		if (luuTruCSV2Id != null) {
			setLuuTruCSV2Id(luuTruCSV2Id);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask |= ID_COLUMN_BITMASK;

		if (!_setOriginalId) {
			_setOriginalId = true;

			_originalId = _id;
		}

		_id = id;
	}

	public long getOriginalId() {
		return _originalId;
	}

	@JSON
	@Override
	public String getMaTinh() {
		if (_maTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTinh;
		}
	}

	@Override
	public void setMaTinh(String maTinh) {
		_columnBitmask = -1L;

		if (_originalMaTinh == null) {
			_originalMaTinh = _maTinh;
		}

		_maTinh = maTinh;
	}

	public String getOriginalMaTinh() {
		return GetterUtil.getString(_originalMaTinh);
	}

	@JSON
	@Override
	public int getNam() {
		return _nam;
	}

	@Override
	public void setNam(int nam) {
		_columnBitmask = -1L;

		if (!_setOriginalNam) {
			_setOriginalNam = true;

			_originalNam = _nam;
		}

		_nam = nam;
	}

	public int getOriginalNam() {
		return _originalNam;
	}

	@JSON
	@Override
	public int getLoaiBaoCao() {
		return _loaiBaoCao;
	}

	@Override
	public void setLoaiBaoCao(int loaiBaoCao) {
		_columnBitmask |= LOAIBAOCAO_COLUMN_BITMASK;

		if (!_setOriginalLoaiBaoCao) {
			_setOriginalLoaiBaoCao = true;

			_originalLoaiBaoCao = _loaiBaoCao;
		}

		_loaiBaoCao = loaiBaoCao;
	}

	public int getOriginalLoaiBaoCao() {
		return _originalLoaiBaoCao;
	}

	@JSON
	@Override
	public String getNguoiLap() {
		if (_nguoiLap == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiLap;
		}
	}

	@Override
	public void setNguoiLap(String nguoiLap) {
		_nguoiLap = nguoiLap;
	}

	@JSON
	@Override
	public String getNguoiDuyet() {
		if (_nguoiDuyet == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiDuyet;
		}
	}

	@Override
	public void setNguoiDuyet(String nguoiDuyet) {
		_nguoiDuyet = nguoiDuyet;
	}

	@JSON
	@Override
	public String getSoBaoCao() {
		if (_soBaoCao == null) {
			return StringPool.BLANK;
		}
		else {
			return _soBaoCao;
		}
	}

	@Override
	public void setSoBaoCao(String soBaoCao) {
		_soBaoCao = soBaoCao;
	}

	@JSON
	@Override
	public Date getNgayBaoCao() {
		return _ngayBaoCao;
	}

	@Override
	public void setNgayBaoCao(Date ngayBaoCao) {
		_columnBitmask = -1L;

		_ngayBaoCao = ngayBaoCao;
	}

	@JSON
	@Override
	public int getTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(int trangThai) {
		_columnBitmask |= TRANGTHAI_COLUMN_BITMASK;

		if (!_setOriginalTrangThai) {
			_setOriginalTrangThai = true;

			_originalTrangThai = _trangThai;
		}

		_trangThai = trangThai;
	}

	public int getOriginalTrangThai() {
		return _originalTrangThai;
	}

	@JSON
	@Override
	public long getLuuTruPDF1Id() {
		return _luuTruPDF1Id;
	}

	@Override
	public void setLuuTruPDF1Id(long luuTruPDF1Id) {
		_luuTruPDF1Id = luuTruPDF1Id;
	}

	@JSON
	@Override
	public long getLuuTruPDF2Id() {
		return _luuTruPDF2Id;
	}

	@Override
	public void setLuuTruPDF2Id(long luuTruPDF2Id) {
		_luuTruPDF2Id = luuTruPDF2Id;
	}

	@JSON
	@Override
	public long getLuuTruCSV1Id() {
		return _luuTruCSV1Id;
	}

	@Override
	public void setLuuTruCSV1Id(long luuTruCSV1Id) {
		_luuTruCSV1Id = luuTruCSV1Id;
	}

	@JSON
	@Override
	public long getLuuTruCSV2Id() {
		return _luuTruCSV2Id;
	}

	@Override
	public void setLuuTruCSV2Id(long luuTruCSV2Id) {
		_luuTruCSV2Id = luuTruCSV2Id;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BaoCaoDLI.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BaoCaoDLI toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BaoCaoDLI)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BaoCaoDLIImpl baoCaoDLIImpl = new BaoCaoDLIImpl();

		baoCaoDLIImpl.setId(getId());
		baoCaoDLIImpl.setMaTinh(getMaTinh());
		baoCaoDLIImpl.setNam(getNam());
		baoCaoDLIImpl.setLoaiBaoCao(getLoaiBaoCao());
		baoCaoDLIImpl.setNguoiLap(getNguoiLap());
		baoCaoDLIImpl.setNguoiDuyet(getNguoiDuyet());
		baoCaoDLIImpl.setSoBaoCao(getSoBaoCao());
		baoCaoDLIImpl.setNgayBaoCao(getNgayBaoCao());
		baoCaoDLIImpl.setTrangThai(getTrangThai());
		baoCaoDLIImpl.setLuuTruPDF1Id(getLuuTruPDF1Id());
		baoCaoDLIImpl.setLuuTruPDF2Id(getLuuTruPDF2Id());
		baoCaoDLIImpl.setLuuTruCSV1Id(getLuuTruCSV1Id());
		baoCaoDLIImpl.setLuuTruCSV2Id(getLuuTruCSV2Id());

		baoCaoDLIImpl.resetOriginalValues();

		return baoCaoDLIImpl;
	}

	@Override
	public int compareTo(BaoCaoDLI baoCaoDLI) {
		int value = 0;

		if (getNam() < baoCaoDLI.getNam()) {
			value = -1;
		}
		else if (getNam() > baoCaoDLI.getNam()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = getMaTinh().compareTo(baoCaoDLI.getMaTinh());

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getNgayBaoCao(), baoCaoDLI.getNgayBaoCao());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BaoCaoDLI)) {
			return false;
		}

		BaoCaoDLI baoCaoDLI = (BaoCaoDLI)obj;

		long primaryKey = baoCaoDLI.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BaoCaoDLIModelImpl baoCaoDLIModelImpl = this;

		baoCaoDLIModelImpl._originalId = baoCaoDLIModelImpl._id;

		baoCaoDLIModelImpl._setOriginalId = false;

		baoCaoDLIModelImpl._originalMaTinh = baoCaoDLIModelImpl._maTinh;

		baoCaoDLIModelImpl._originalNam = baoCaoDLIModelImpl._nam;

		baoCaoDLIModelImpl._setOriginalNam = false;

		baoCaoDLIModelImpl._originalLoaiBaoCao = baoCaoDLIModelImpl._loaiBaoCao;

		baoCaoDLIModelImpl._setOriginalLoaiBaoCao = false;

		baoCaoDLIModelImpl._originalTrangThai = baoCaoDLIModelImpl._trangThai;

		baoCaoDLIModelImpl._setOriginalTrangThai = false;

		baoCaoDLIModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BaoCaoDLI> toCacheModel() {
		BaoCaoDLICacheModel baoCaoDLICacheModel = new BaoCaoDLICacheModel();

		baoCaoDLICacheModel.id = getId();

		baoCaoDLICacheModel.maTinh = getMaTinh();

		String maTinh = baoCaoDLICacheModel.maTinh;

		if ((maTinh != null) && (maTinh.length() == 0)) {
			baoCaoDLICacheModel.maTinh = null;
		}

		baoCaoDLICacheModel.nam = getNam();

		baoCaoDLICacheModel.loaiBaoCao = getLoaiBaoCao();

		baoCaoDLICacheModel.nguoiLap = getNguoiLap();

		String nguoiLap = baoCaoDLICacheModel.nguoiLap;

		if ((nguoiLap != null) && (nguoiLap.length() == 0)) {
			baoCaoDLICacheModel.nguoiLap = null;
		}

		baoCaoDLICacheModel.nguoiDuyet = getNguoiDuyet();

		String nguoiDuyet = baoCaoDLICacheModel.nguoiDuyet;

		if ((nguoiDuyet != null) && (nguoiDuyet.length() == 0)) {
			baoCaoDLICacheModel.nguoiDuyet = null;
		}

		baoCaoDLICacheModel.soBaoCao = getSoBaoCao();

		String soBaoCao = baoCaoDLICacheModel.soBaoCao;

		if ((soBaoCao != null) && (soBaoCao.length() == 0)) {
			baoCaoDLICacheModel.soBaoCao = null;
		}

		Date ngayBaoCao = getNgayBaoCao();

		if (ngayBaoCao != null) {
			baoCaoDLICacheModel.ngayBaoCao = ngayBaoCao.getTime();
		}
		else {
			baoCaoDLICacheModel.ngayBaoCao = Long.MIN_VALUE;
		}

		baoCaoDLICacheModel.trangThai = getTrangThai();

		baoCaoDLICacheModel.luuTruPDF1Id = getLuuTruPDF1Id();

		baoCaoDLICacheModel.luuTruPDF2Id = getLuuTruPDF2Id();

		baoCaoDLICacheModel.luuTruCSV1Id = getLuuTruCSV1Id();

		baoCaoDLICacheModel.luuTruCSV2Id = getLuuTruCSV2Id();

		return baoCaoDLICacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", nam=");
		sb.append(getNam());
		sb.append(", loaiBaoCao=");
		sb.append(getLoaiBaoCao());
		sb.append(", nguoiLap=");
		sb.append(getNguoiLap());
		sb.append(", nguoiDuyet=");
		sb.append(getNguoiDuyet());
		sb.append(", soBaoCao=");
		sb.append(getSoBaoCao());
		sb.append(", ngayBaoCao=");
		sb.append(getNgayBaoCao());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", luuTruPDF1Id=");
		sb.append(getLuuTruPDF1Id());
		sb.append(", luuTruPDF2Id=");
		sb.append(getLuuTruPDF2Id());
		sb.append(", luuTruCSV1Id=");
		sb.append(getLuuTruCSV1Id());
		sb.append(", luuTruCSV2Id=");
		sb.append(getLuuTruCSV2Id());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.sol.ns.baocaodli.dao.model.BaoCaoDLI");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nam</column-name><column-value><![CDATA[");
		sb.append(getNam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loaiBaoCao</column-name><column-value><![CDATA[");
		sb.append(getLoaiBaoCao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiLap</column-name><column-value><![CDATA[");
		sb.append(getNguoiLap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiDuyet</column-name><column-value><![CDATA[");
		sb.append(getNguoiDuyet());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soBaoCao</column-name><column-value><![CDATA[");
		sb.append(getSoBaoCao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayBaoCao</column-name><column-value><![CDATA[");
		sb.append(getNgayBaoCao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luuTruPDF1Id</column-name><column-value><![CDATA[");
		sb.append(getLuuTruPDF1Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luuTruPDF2Id</column-name><column-value><![CDATA[");
		sb.append(getLuuTruPDF2Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luuTruCSV1Id</column-name><column-value><![CDATA[");
		sb.append(getLuuTruCSV1Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>luuTruCSV2Id</column-name><column-value><![CDATA[");
		sb.append(getLuuTruCSV2Id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BaoCaoDLI.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BaoCaoDLI.class
		};
	private long _id;
	private long _originalId;
	private boolean _setOriginalId;
	private String _maTinh;
	private String _originalMaTinh;
	private int _nam;
	private int _originalNam;
	private boolean _setOriginalNam;
	private int _loaiBaoCao;
	private int _originalLoaiBaoCao;
	private boolean _setOriginalLoaiBaoCao;
	private String _nguoiLap;
	private String _nguoiDuyet;
	private String _soBaoCao;
	private Date _ngayBaoCao;
	private int _trangThai;
	private int _originalTrangThai;
	private boolean _setOriginalTrangThai;
	private long _luuTruPDF1Id;
	private long _luuTruPDF2Id;
	private long _luuTruCSV1Id;
	private long _luuTruCSV2Id;
	private long _columnBitmask;
	private BaoCaoDLI _escapedModel;
}