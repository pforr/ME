/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.cmon.dm.dao.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DM_THONXOM service. Represents a row in the &quot;DM_THONXOM&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.dtt.cmon.dm.dao.model.impl.DM_THONXOMModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.dtt.cmon.dm.dao.model.impl.DM_THONXOMImpl}.
 * </p>
 *
 * @author khoa.vu
 * @see DM_THONXOM
 * @see vn.dtt.cmon.dm.dao.model.impl.DM_THONXOMImpl
 * @see vn.dtt.cmon.dm.dao.model.impl.DM_THONXOMModelImpl
 * @generated
 */
public interface DM_THONXOMModel extends BaseModel<DM_THONXOM> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a d m_ t h o n x o m model instance should use the {@link DM_THONXOM} interface instead.
	 */

	/**
	 * Returns the primary key of this d m_ t h o n x o m.
	 *
	 * @return the primary key of this d m_ t h o n x o m
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this d m_ t h o n x o m.
	 *
	 * @param primaryKey the primary key of this d m_ t h o n x o m
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this d m_ t h o n x o m.
	 *
	 * @return the ID of this d m_ t h o n x o m
	 */
	public long getId();

	/**
	 * Sets the ID of this d m_ t h o n x o m.
	 *
	 * @param id the ID of this d m_ t h o n x o m
	 */
	public void setId(long id);

	/**
	 * Returns the ma tinh of this d m_ t h o n x o m.
	 *
	 * @return the ma tinh of this d m_ t h o n x o m
	 */
	@AutoEscape
	public String getMaTinh();

	/**
	 * Sets the ma tinh of this d m_ t h o n x o m.
	 *
	 * @param maTinh the ma tinh of this d m_ t h o n x o m
	 */
	public void setMaTinh(String maTinh);

	/**
	 * Returns the ma huyen of this d m_ t h o n x o m.
	 *
	 * @return the ma huyen of this d m_ t h o n x o m
	 */
	@AutoEscape
	public String getMaHuyen();

	/**
	 * Sets the ma huyen of this d m_ t h o n x o m.
	 *
	 * @param maHuyen the ma huyen of this d m_ t h o n x o m
	 */
	public void setMaHuyen(String maHuyen);

	/**
	 * Returns the ma xa of this d m_ t h o n x o m.
	 *
	 * @return the ma xa of this d m_ t h o n x o m
	 */
	@AutoEscape
	public String getMaXa();

	/**
	 * Sets the ma xa of this d m_ t h o n x o m.
	 *
	 * @param maXa the ma xa of this d m_ t h o n x o m
	 */
	public void setMaXa(String maXa);

	/**
	 * Returns the thon xom of this d m_ t h o n x o m.
	 *
	 * @return the thon xom of this d m_ t h o n x o m
	 */
	@AutoEscape
	public String getThonXom();

	/**
	 * Sets the thon xom of this d m_ t h o n x o m.
	 *
	 * @param thonXom the thon xom of this d m_ t h o n x o m
	 */
	public void setThonXom(String thonXom);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DM_THONXOM dm_thonxom);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DM_THONXOM> toCacheModel();

	@Override
	public DM_THONXOM toEscapedModel();

	@Override
	public DM_THONXOM toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}