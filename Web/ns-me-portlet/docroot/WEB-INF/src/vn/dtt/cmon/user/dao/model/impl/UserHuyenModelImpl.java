/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.cmon.user.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.cmon.user.dao.model.UserHuyen;
import vn.dtt.cmon.user.dao.model.UserHuyenModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the UserHuyen service. Represents a row in the &quot;ME_DIABANQLY_HUYEN&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.cmon.user.dao.model.UserHuyenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserHuyenImpl}.
 * </p>
 *
 * @author khoa.vu
 * @see UserHuyenImpl
 * @see vn.dtt.cmon.user.dao.model.UserHuyen
 * @see vn.dtt.cmon.user.dao.model.UserHuyenModel
 * @generated
 */
public class UserHuyenModelImpl extends BaseModelImpl<UserHuyen>
	implements UserHuyenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user huyen model instance should use the {@link vn.dtt.cmon.user.dao.model.UserHuyen} interface instead.
	 */
	public static final String TABLE_NAME = "ME_DIABANQLY_HUYEN";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "MATINH", Types.VARCHAR },
			{ "MAHUYEN", Types.VARCHAR },
			{ "MAXA", Types.VARCHAR },
			{ "NAME", Types.VARCHAR },
			{ "USERID", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ME_DIABANQLY_HUYEN (ID LONG not null primary key,MATINH VARCHAR(75) null,MAHUYEN VARCHAR(75) null,MAXA VARCHAR(75) null,NAME VARCHAR(75) null,USERID LONG)";
	public static final String TABLE_SQL_DROP = "drop table ME_DIABANQLY_HUYEN";
	public static final String ORDER_BY_JPQL = " ORDER BY userHuyen.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ME_DIABANQLY_HUYEN.ID ASC";
	public static final String DATA_SOURCE = "dmDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.cmon.user.dao.model.UserHuyen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.cmon.user.dao.model.UserHuyen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.cmon.user.dao.model.UserHuyen"),
			true);
	public static long MAHUYEN_COLUMN_BITMASK = 1L;
	public static long MATINH_COLUMN_BITMASK = 2L;
	public static long MAXA_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long ID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.cmon.user.dao.model.UserHuyen"));

	public UserHuyenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return UserHuyen.class;
	}

	@Override
	public String getModelClassName() {
		return UserHuyen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maTinh", getMaTinh());
		attributes.put("maHuyen", getMaHuyen());
		attributes.put("maXa", getMaXa());
		attributes.put("name", getName());
		attributes.put("userId", getUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		String maHuyen = (String)attributes.get("maHuyen");

		if (maHuyen != null) {
			setMaHuyen(maHuyen);
		}

		String maXa = (String)attributes.get("maXa");

		if (maXa != null) {
			setMaXa(maXa);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getMaTinh() {
		if (_maTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTinh;
		}
	}

	@Override
	public void setMaTinh(String maTinh) {
		_columnBitmask |= MATINH_COLUMN_BITMASK;

		if (_originalMaTinh == null) {
			_originalMaTinh = _maTinh;
		}

		_maTinh = maTinh;
	}

	public String getOriginalMaTinh() {
		return GetterUtil.getString(_originalMaTinh);
	}

	@Override
	public String getMaHuyen() {
		if (_maHuyen == null) {
			return StringPool.BLANK;
		}
		else {
			return _maHuyen;
		}
	}

	@Override
	public void setMaHuyen(String maHuyen) {
		_columnBitmask |= MAHUYEN_COLUMN_BITMASK;

		if (_originalMaHuyen == null) {
			_originalMaHuyen = _maHuyen;
		}

		_maHuyen = maHuyen;
	}

	public String getOriginalMaHuyen() {
		return GetterUtil.getString(_originalMaHuyen);
	}

	@Override
	public String getMaXa() {
		if (_maXa == null) {
			return StringPool.BLANK;
		}
		else {
			return _maXa;
		}
	}

	@Override
	public void setMaXa(String maXa) {
		_columnBitmask |= MAXA_COLUMN_BITMASK;

		if (_originalMaXa == null) {
			_originalMaXa = _maXa;
		}

		_maXa = maXa;
	}

	public String getOriginalMaXa() {
		return GetterUtil.getString(_originalMaXa);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			UserHuyen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public UserHuyen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserHuyen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserHuyenImpl userHuyenImpl = new UserHuyenImpl();

		userHuyenImpl.setId(getId());
		userHuyenImpl.setMaTinh(getMaTinh());
		userHuyenImpl.setMaHuyen(getMaHuyen());
		userHuyenImpl.setMaXa(getMaXa());
		userHuyenImpl.setName(getName());
		userHuyenImpl.setUserId(getUserId());

		userHuyenImpl.resetOriginalValues();

		return userHuyenImpl;
	}

	@Override
	public int compareTo(UserHuyen userHuyen) {
		long primaryKey = userHuyen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserHuyen)) {
			return false;
		}

		UserHuyen userHuyen = (UserHuyen)obj;

		long primaryKey = userHuyen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		UserHuyenModelImpl userHuyenModelImpl = this;

		userHuyenModelImpl._originalMaTinh = userHuyenModelImpl._maTinh;

		userHuyenModelImpl._originalMaHuyen = userHuyenModelImpl._maHuyen;

		userHuyenModelImpl._originalMaXa = userHuyenModelImpl._maXa;

		userHuyenModelImpl._originalUserId = userHuyenModelImpl._userId;

		userHuyenModelImpl._setOriginalUserId = false;

		userHuyenModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<UserHuyen> toCacheModel() {
		UserHuyenCacheModel userHuyenCacheModel = new UserHuyenCacheModel();

		userHuyenCacheModel.id = getId();

		userHuyenCacheModel.maTinh = getMaTinh();

		String maTinh = userHuyenCacheModel.maTinh;

		if ((maTinh != null) && (maTinh.length() == 0)) {
			userHuyenCacheModel.maTinh = null;
		}

		userHuyenCacheModel.maHuyen = getMaHuyen();

		String maHuyen = userHuyenCacheModel.maHuyen;

		if ((maHuyen != null) && (maHuyen.length() == 0)) {
			userHuyenCacheModel.maHuyen = null;
		}

		userHuyenCacheModel.maXa = getMaXa();

		String maXa = userHuyenCacheModel.maXa;

		if ((maXa != null) && (maXa.length() == 0)) {
			userHuyenCacheModel.maXa = null;
		}

		userHuyenCacheModel.name = getName();

		String name = userHuyenCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			userHuyenCacheModel.name = null;
		}

		userHuyenCacheModel.userId = getUserId();

		return userHuyenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", maHuyen=");
		sb.append(getMaHuyen());
		sb.append(", maXa=");
		sb.append(getMaXa());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.cmon.user.dao.model.UserHuyen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maHuyen</column-name><column-value><![CDATA[");
		sb.append(getMaHuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maXa</column-name><column-value><![CDATA[");
		sb.append(getMaXa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UserHuyen.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UserHuyen.class
		};
	private long _id;
	private String _maTinh;
	private String _originalMaTinh;
	private String _maHuyen;
	private String _originalMaHuyen;
	private String _maXa;
	private String _originalMaXa;
	private String _name;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _columnBitmask;
	private UserHuyen _escapedModel;
}