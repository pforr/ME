/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.sol.ns.vesinhmoitruong.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew;
import vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNewModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the keHoachVeSinhXaNew service. Represents a row in the &quot;ME_KEHOACHVESINHXA&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNewModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link keHoachVeSinhXaNewImpl}.
 * </p>
 *
 * @author BinhTH
 * @see keHoachVeSinhXaNewImpl
 * @see vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew
 * @see vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNewModel
 * @generated
 */
public class keHoachVeSinhXaNewModelImpl extends BaseModelImpl<keHoachVeSinhXaNew>
	implements keHoachVeSinhXaNewModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ke hoach ve sinh xa new model instance should use the {@link vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew} interface instead.
	 */
	public static final String TABLE_NAME = "ME_KEHOACHVESINHXA";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.INTEGER },
			{ "MATINH", Types.VARCHAR },
			{ "MAHUYEN", Types.VARCHAR },
			{ "MAXA", Types.VARCHAR },
			{ "NAM", Types.INTEGER },
			{ "SONHATIEUHVSMOI", Types.INTEGER },
			{ "SODAN", Types.INTEGER },
			{ "DANGKYVSTX", Types.INTEGER },
			{ "GHICHU", Types.VARCHAR },
			{ "BAOCAODLI", Types.INTEGER },
			{ "NGAYTAO", Types.TIMESTAMP },
			{ "IDNGUOITAO", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table ME_KEHOACHVESINHXA (ID INTEGER not null primary key,MATINH VARCHAR(75) null,MAHUYEN VARCHAR(75) null,MAXA VARCHAR(75) null,NAM INTEGER,SONHATIEUHVSMOI INTEGER,SODAN INTEGER,DANGKYVSTX INTEGER,GHICHU VARCHAR(75) null,BAOCAODLI INTEGER,NGAYTAO DATE null,IDNGUOITAO INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table ME_KEHOACHVESINHXA";
	public static final String ORDER_BY_JPQL = " ORDER BY keHoachVeSinhXaNew.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ME_KEHOACHVESINHXA.ID ASC";
	public static final String DATA_SOURCE = "dmDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew"));

	public keHoachVeSinhXaNewModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return keHoachVeSinhXaNew.class;
	}

	@Override
	public String getModelClassName() {
		return keHoachVeSinhXaNew.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maTinh", getMaTinh());
		attributes.put("maHuyen", getMaHuyen());
		attributes.put("maXa", getMaXa());
		attributes.put("nam", getNam());
		attributes.put("soNhaTieuHVSMoi", getSoNhaTieuHVSMoi());
		attributes.put("soDan", getSoDan());
		attributes.put("dangKyVSTX", getDangKyVSTX());
		attributes.put("ghiChu", getGhiChu());
		attributes.put("baoCaoDLI", getBaoCaoDLI());
		attributes.put("ngayTao", getNgayTao());
		attributes.put("idNguoiTao", getIdNguoiTao());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer id = (Integer)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		String maHuyen = (String)attributes.get("maHuyen");

		if (maHuyen != null) {
			setMaHuyen(maHuyen);
		}

		String maXa = (String)attributes.get("maXa");

		if (maXa != null) {
			setMaXa(maXa);
		}

		Integer nam = (Integer)attributes.get("nam");

		if (nam != null) {
			setNam(nam);
		}

		Integer soNhaTieuHVSMoi = (Integer)attributes.get("soNhaTieuHVSMoi");

		if (soNhaTieuHVSMoi != null) {
			setSoNhaTieuHVSMoi(soNhaTieuHVSMoi);
		}

		Integer soDan = (Integer)attributes.get("soDan");

		if (soDan != null) {
			setSoDan(soDan);
		}

		Integer dangKyVSTX = (Integer)attributes.get("dangKyVSTX");

		if (dangKyVSTX != null) {
			setDangKyVSTX(dangKyVSTX);
		}

		String ghiChu = (String)attributes.get("ghiChu");

		if (ghiChu != null) {
			setGhiChu(ghiChu);
		}

		Integer baoCaoDLI = (Integer)attributes.get("baoCaoDLI");

		if (baoCaoDLI != null) {
			setBaoCaoDLI(baoCaoDLI);
		}

		Date ngayTao = (Date)attributes.get("ngayTao");

		if (ngayTao != null) {
			setNgayTao(ngayTao);
		}

		Integer idNguoiTao = (Integer)attributes.get("idNguoiTao");

		if (idNguoiTao != null) {
			setIdNguoiTao(idNguoiTao);
		}
	}

	@Override
	public int getId() {
		return _id;
	}

	@Override
	public void setId(int id) {
		_id = id;
	}

	@Override
	public String getMaTinh() {
		if (_maTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTinh;
		}
	}

	@Override
	public void setMaTinh(String maTinh) {
		_maTinh = maTinh;
	}

	@Override
	public String getMaHuyen() {
		if (_maHuyen == null) {
			return StringPool.BLANK;
		}
		else {
			return _maHuyen;
		}
	}

	@Override
	public void setMaHuyen(String maHuyen) {
		_maHuyen = maHuyen;
	}

	@Override
	public String getMaXa() {
		if (_maXa == null) {
			return StringPool.BLANK;
		}
		else {
			return _maXa;
		}
	}

	@Override
	public void setMaXa(String maXa) {
		_maXa = maXa;
	}

	@Override
	public int getNam() {
		return _nam;
	}

	@Override
	public void setNam(int nam) {
		_nam = nam;
	}

	@Override
	public int getSoNhaTieuHVSMoi() {
		return _soNhaTieuHVSMoi;
	}

	@Override
	public void setSoNhaTieuHVSMoi(int soNhaTieuHVSMoi) {
		_soNhaTieuHVSMoi = soNhaTieuHVSMoi;
	}

	@Override
	public int getSoDan() {
		return _soDan;
	}

	@Override
	public void setSoDan(int soDan) {
		_soDan = soDan;
	}

	@Override
	public int getDangKyVSTX() {
		return _dangKyVSTX;
	}

	@Override
	public void setDangKyVSTX(int dangKyVSTX) {
		_dangKyVSTX = dangKyVSTX;
	}

	@Override
	public String getGhiChu() {
		if (_ghiChu == null) {
			return StringPool.BLANK;
		}
		else {
			return _ghiChu;
		}
	}

	@Override
	public void setGhiChu(String ghiChu) {
		_ghiChu = ghiChu;
	}

	@Override
	public int getBaoCaoDLI() {
		return _baoCaoDLI;
	}

	@Override
	public void setBaoCaoDLI(int baoCaoDLI) {
		_baoCaoDLI = baoCaoDLI;
	}

	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	@Override
	public int getIdNguoiTao() {
		return _idNguoiTao;
	}

	@Override
	public void setIdNguoiTao(int idNguoiTao) {
		_idNguoiTao = idNguoiTao;
	}

	@Override
	public keHoachVeSinhXaNew toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (keHoachVeSinhXaNew)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		keHoachVeSinhXaNewImpl keHoachVeSinhXaNewImpl = new keHoachVeSinhXaNewImpl();

		keHoachVeSinhXaNewImpl.setId(getId());
		keHoachVeSinhXaNewImpl.setMaTinh(getMaTinh());
		keHoachVeSinhXaNewImpl.setMaHuyen(getMaHuyen());
		keHoachVeSinhXaNewImpl.setMaXa(getMaXa());
		keHoachVeSinhXaNewImpl.setNam(getNam());
		keHoachVeSinhXaNewImpl.setSoNhaTieuHVSMoi(getSoNhaTieuHVSMoi());
		keHoachVeSinhXaNewImpl.setSoDan(getSoDan());
		keHoachVeSinhXaNewImpl.setDangKyVSTX(getDangKyVSTX());
		keHoachVeSinhXaNewImpl.setGhiChu(getGhiChu());
		keHoachVeSinhXaNewImpl.setBaoCaoDLI(getBaoCaoDLI());
		keHoachVeSinhXaNewImpl.setNgayTao(getNgayTao());
		keHoachVeSinhXaNewImpl.setIdNguoiTao(getIdNguoiTao());

		keHoachVeSinhXaNewImpl.resetOriginalValues();

		return keHoachVeSinhXaNewImpl;
	}

	@Override
	public int compareTo(keHoachVeSinhXaNew keHoachVeSinhXaNew) {
		int value = 0;

		if (getId() < keHoachVeSinhXaNew.getId()) {
			value = -1;
		}
		else if (getId() > keHoachVeSinhXaNew.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof keHoachVeSinhXaNew)) {
			return false;
		}

		keHoachVeSinhXaNew keHoachVeSinhXaNew = (keHoachVeSinhXaNew)obj;

		int primaryKey = keHoachVeSinhXaNew.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<keHoachVeSinhXaNew> toCacheModel() {
		keHoachVeSinhXaNewCacheModel keHoachVeSinhXaNewCacheModel = new keHoachVeSinhXaNewCacheModel();

		keHoachVeSinhXaNewCacheModel.id = getId();

		keHoachVeSinhXaNewCacheModel.maTinh = getMaTinh();

		String maTinh = keHoachVeSinhXaNewCacheModel.maTinh;

		if ((maTinh != null) && (maTinh.length() == 0)) {
			keHoachVeSinhXaNewCacheModel.maTinh = null;
		}

		keHoachVeSinhXaNewCacheModel.maHuyen = getMaHuyen();

		String maHuyen = keHoachVeSinhXaNewCacheModel.maHuyen;

		if ((maHuyen != null) && (maHuyen.length() == 0)) {
			keHoachVeSinhXaNewCacheModel.maHuyen = null;
		}

		keHoachVeSinhXaNewCacheModel.maXa = getMaXa();

		String maXa = keHoachVeSinhXaNewCacheModel.maXa;

		if ((maXa != null) && (maXa.length() == 0)) {
			keHoachVeSinhXaNewCacheModel.maXa = null;
		}

		keHoachVeSinhXaNewCacheModel.nam = getNam();

		keHoachVeSinhXaNewCacheModel.soNhaTieuHVSMoi = getSoNhaTieuHVSMoi();

		keHoachVeSinhXaNewCacheModel.soDan = getSoDan();

		keHoachVeSinhXaNewCacheModel.dangKyVSTX = getDangKyVSTX();

		keHoachVeSinhXaNewCacheModel.ghiChu = getGhiChu();

		String ghiChu = keHoachVeSinhXaNewCacheModel.ghiChu;

		if ((ghiChu != null) && (ghiChu.length() == 0)) {
			keHoachVeSinhXaNewCacheModel.ghiChu = null;
		}

		keHoachVeSinhXaNewCacheModel.baoCaoDLI = getBaoCaoDLI();

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			keHoachVeSinhXaNewCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			keHoachVeSinhXaNewCacheModel.ngayTao = Long.MIN_VALUE;
		}

		keHoachVeSinhXaNewCacheModel.idNguoiTao = getIdNguoiTao();

		return keHoachVeSinhXaNewCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", maHuyen=");
		sb.append(getMaHuyen());
		sb.append(", maXa=");
		sb.append(getMaXa());
		sb.append(", nam=");
		sb.append(getNam());
		sb.append(", soNhaTieuHVSMoi=");
		sb.append(getSoNhaTieuHVSMoi());
		sb.append(", soDan=");
		sb.append(getSoDan());
		sb.append(", dangKyVSTX=");
		sb.append(getDangKyVSTX());
		sb.append(", ghiChu=");
		sb.append(getGhiChu());
		sb.append(", baoCaoDLI=");
		sb.append(getBaoCaoDLI());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", idNguoiTao=");
		sb.append(getIdNguoiTao());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.sol.ns.vesinhmoitruong.dao.model.keHoachVeSinhXaNew");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maHuyen</column-name><column-value><![CDATA[");
		sb.append(getMaHuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maXa</column-name><column-value><![CDATA[");
		sb.append(getMaXa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nam</column-name><column-value><![CDATA[");
		sb.append(getNam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soNhaTieuHVSMoi</column-name><column-value><![CDATA[");
		sb.append(getSoNhaTieuHVSMoi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soDan</column-name><column-value><![CDATA[");
		sb.append(getSoDan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dangKyVSTX</column-name><column-value><![CDATA[");
		sb.append(getDangKyVSTX());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ghiChu</column-name><column-value><![CDATA[");
		sb.append(getGhiChu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>baoCaoDLI</column-name><column-value><![CDATA[");
		sb.append(getBaoCaoDLI());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idNguoiTao</column-name><column-value><![CDATA[");
		sb.append(getIdNguoiTao());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = keHoachVeSinhXaNew.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			keHoachVeSinhXaNew.class
		};
	private int _id;
	private String _maTinh;
	private String _maHuyen;
	private String _maXa;
	private int _nam;
	private int _soNhaTieuHVSMoi;
	private int _soDan;
	private int _dangKyVSTX;
	private String _ghiChu;
	private int _baoCaoDLI;
	private Date _ngayTao;
	private int _idNguoiTao;
	private keHoachVeSinhXaNew _escapedModel;
}