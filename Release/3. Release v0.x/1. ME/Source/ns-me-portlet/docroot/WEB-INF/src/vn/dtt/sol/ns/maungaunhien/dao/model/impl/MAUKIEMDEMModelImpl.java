/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.sol.ns.maungaunhien.dao.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM;
import vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEMModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MAUKIEMDEM service. Represents a row in the &quot;ME_MAUKIEMDEM&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEMModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MAUKIEMDEMImpl}.
 * </p>
 *
 * @author khoa.vu
 * @see MAUKIEMDEMImpl
 * @see vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM
 * @see vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEMModel
 * @generated
 */
public class MAUKIEMDEMModelImpl extends BaseModelImpl<MAUKIEMDEM>
	implements MAUKIEMDEMModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a m a u k i e m d e m model instance should use the {@link vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM} interface instead.
	 */
	public static final String TABLE_NAME = "ME_MAUKIEMDEM";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "MAXA", Types.VARCHAR },
			{ "MATINH", Types.VARCHAR },
			{ "MAHUYEN", Types.VARCHAR },
			{ "NAM", Types.INTEGER },
			{ "TONGSOHGD", Types.INTEGER },
			{ "SOMAUNGAUNHIEN", Types.INTEGER },
			{ "SOMAUDUPHONG", Types.INTEGER },
			{ "TONGSOMAU", Types.INTEGER },
			{ "SOMAUHVS", Types.INTEGER },
			{ "SOMAUCONHATIEU", Types.INTEGER },
			{ "SOMAUKIEMDEM", Types.INTEGER },
			{ "NGAYTAO", Types.TIMESTAMP },
			{ "IDNGUOITAO", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ME_MAUKIEMDEM (ID LONG not null primary key,MAXA VARCHAR(75) null,MATINH VARCHAR(75) null,MAHUYEN VARCHAR(75) null,NAM INTEGER,TONGSOHGD INTEGER,SOMAUNGAUNHIEN INTEGER,SOMAUDUPHONG INTEGER,TONGSOMAU INTEGER,SOMAUHVS INTEGER,SOMAUCONHATIEU INTEGER,SOMAUKIEMDEM INTEGER,NGAYTAO DATE null,IDNGUOITAO LONG)";
	public static final String TABLE_SQL_DROP = "drop table ME_MAUKIEMDEM";
	public static final String ORDER_BY_JPQL = " ORDER BY maukiemdem.nam ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ME_MAUKIEMDEM.NAM ASC";
	public static final String DATA_SOURCE = "dmDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM"),
			true);
	public static long MAHUYEN_COLUMN_BITMASK = 1L;
	public static long MATINH_COLUMN_BITMASK = 2L;
	public static long MAXA_COLUMN_BITMASK = 4L;
	public static long NAM_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM"));

	public MAUKIEMDEMModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MAUKIEMDEM.class;
	}

	@Override
	public String getModelClassName() {
		return MAUKIEMDEM.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("maXa", getMaXa());
		attributes.put("maTinh", getMaTinh());
		attributes.put("maHuyen", getMaHuyen());
		attributes.put("nam", getNam());
		attributes.put("tongSoHGD", getTongSoHGD());
		attributes.put("soMauNgauNhien", getSoMauNgauNhien());
		attributes.put("soMauDuPhong", getSoMauDuPhong());
		attributes.put("tongSoMau", getTongSoMau());
		attributes.put("soMauHVS", getSoMauHVS());
		attributes.put("soMauCoNhaTieu", getSoMauCoNhaTieu());
		attributes.put("soMauKiemDem", getSoMauKiemDem());
		attributes.put("ngayTao", getNgayTao());
		attributes.put("userId", getUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String maXa = (String)attributes.get("maXa");

		if (maXa != null) {
			setMaXa(maXa);
		}

		String maTinh = (String)attributes.get("maTinh");

		if (maTinh != null) {
			setMaTinh(maTinh);
		}

		String maHuyen = (String)attributes.get("maHuyen");

		if (maHuyen != null) {
			setMaHuyen(maHuyen);
		}

		Integer nam = (Integer)attributes.get("nam");

		if (nam != null) {
			setNam(nam);
		}

		Integer tongSoHGD = (Integer)attributes.get("tongSoHGD");

		if (tongSoHGD != null) {
			setTongSoHGD(tongSoHGD);
		}

		Integer soMauNgauNhien = (Integer)attributes.get("soMauNgauNhien");

		if (soMauNgauNhien != null) {
			setSoMauNgauNhien(soMauNgauNhien);
		}

		Integer soMauDuPhong = (Integer)attributes.get("soMauDuPhong");

		if (soMauDuPhong != null) {
			setSoMauDuPhong(soMauDuPhong);
		}

		Integer tongSoMau = (Integer)attributes.get("tongSoMau");

		if (tongSoMau != null) {
			setTongSoMau(tongSoMau);
		}

		Integer soMauHVS = (Integer)attributes.get("soMauHVS");

		if (soMauHVS != null) {
			setSoMauHVS(soMauHVS);
		}

		Integer soMauCoNhaTieu = (Integer)attributes.get("soMauCoNhaTieu");

		if (soMauCoNhaTieu != null) {
			setSoMauCoNhaTieu(soMauCoNhaTieu);
		}

		Integer soMauKiemDem = (Integer)attributes.get("soMauKiemDem");

		if (soMauKiemDem != null) {
			setSoMauKiemDem(soMauKiemDem);
		}

		Date ngayTao = (Date)attributes.get("ngayTao");

		if (ngayTao != null) {
			setNgayTao(ngayTao);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getMaXa() {
		if (_maXa == null) {
			return StringPool.BLANK;
		}
		else {
			return _maXa;
		}
	}

	@Override
	public void setMaXa(String maXa) {
		_columnBitmask |= MAXA_COLUMN_BITMASK;

		if (_originalMaXa == null) {
			_originalMaXa = _maXa;
		}

		_maXa = maXa;
	}

	public String getOriginalMaXa() {
		return GetterUtil.getString(_originalMaXa);
	}

	@Override
	public String getMaTinh() {
		if (_maTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _maTinh;
		}
	}

	@Override
	public void setMaTinh(String maTinh) {
		_columnBitmask |= MATINH_COLUMN_BITMASK;

		if (_originalMaTinh == null) {
			_originalMaTinh = _maTinh;
		}

		_maTinh = maTinh;
	}

	public String getOriginalMaTinh() {
		return GetterUtil.getString(_originalMaTinh);
	}

	@Override
	public String getMaHuyen() {
		if (_maHuyen == null) {
			return StringPool.BLANK;
		}
		else {
			return _maHuyen;
		}
	}

	@Override
	public void setMaHuyen(String maHuyen) {
		_columnBitmask |= MAHUYEN_COLUMN_BITMASK;

		if (_originalMaHuyen == null) {
			_originalMaHuyen = _maHuyen;
		}

		_maHuyen = maHuyen;
	}

	public String getOriginalMaHuyen() {
		return GetterUtil.getString(_originalMaHuyen);
	}

	@Override
	public int getNam() {
		return _nam;
	}

	@Override
	public void setNam(int nam) {
		_columnBitmask = -1L;

		if (!_setOriginalNam) {
			_setOriginalNam = true;

			_originalNam = _nam;
		}

		_nam = nam;
	}

	public int getOriginalNam() {
		return _originalNam;
	}

	@Override
	public int getTongSoHGD() {
		return _tongSoHGD;
	}

	@Override
	public void setTongSoHGD(int tongSoHGD) {
		_tongSoHGD = tongSoHGD;
	}

	@Override
	public int getSoMauNgauNhien() {
		return _soMauNgauNhien;
	}

	@Override
	public void setSoMauNgauNhien(int soMauNgauNhien) {
		_soMauNgauNhien = soMauNgauNhien;
	}

	@Override
	public int getSoMauDuPhong() {
		return _soMauDuPhong;
	}

	@Override
	public void setSoMauDuPhong(int soMauDuPhong) {
		_soMauDuPhong = soMauDuPhong;
	}

	@Override
	public int getTongSoMau() {
		return _tongSoMau;
	}

	@Override
	public void setTongSoMau(int tongSoMau) {
		_tongSoMau = tongSoMau;
	}

	@Override
	public int getSoMauHVS() {
		return _soMauHVS;
	}

	@Override
	public void setSoMauHVS(int soMauHVS) {
		_soMauHVS = soMauHVS;
	}

	@Override
	public int getSoMauCoNhaTieu() {
		return _soMauCoNhaTieu;
	}

	@Override
	public void setSoMauCoNhaTieu(int soMauCoNhaTieu) {
		_soMauCoNhaTieu = soMauCoNhaTieu;
	}

	@Override
	public int getSoMauKiemDem() {
		return _soMauKiemDem;
	}

	@Override
	public void setSoMauKiemDem(int soMauKiemDem) {
		_soMauKiemDem = soMauKiemDem;
	}

	@Override
	public Date getNgayTao() {
		return _ngayTao;
	}

	@Override
	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MAUKIEMDEM.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MAUKIEMDEM toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MAUKIEMDEM)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MAUKIEMDEMImpl maukiemdemImpl = new MAUKIEMDEMImpl();

		maukiemdemImpl.setId(getId());
		maukiemdemImpl.setMaXa(getMaXa());
		maukiemdemImpl.setMaTinh(getMaTinh());
		maukiemdemImpl.setMaHuyen(getMaHuyen());
		maukiemdemImpl.setNam(getNam());
		maukiemdemImpl.setTongSoHGD(getTongSoHGD());
		maukiemdemImpl.setSoMauNgauNhien(getSoMauNgauNhien());
		maukiemdemImpl.setSoMauDuPhong(getSoMauDuPhong());
		maukiemdemImpl.setTongSoMau(getTongSoMau());
		maukiemdemImpl.setSoMauHVS(getSoMauHVS());
		maukiemdemImpl.setSoMauCoNhaTieu(getSoMauCoNhaTieu());
		maukiemdemImpl.setSoMauKiemDem(getSoMauKiemDem());
		maukiemdemImpl.setNgayTao(getNgayTao());
		maukiemdemImpl.setUserId(getUserId());

		maukiemdemImpl.resetOriginalValues();

		return maukiemdemImpl;
	}

	@Override
	public int compareTo(MAUKIEMDEM maukiemdem) {
		int value = 0;

		if (getNam() < maukiemdem.getNam()) {
			value = -1;
		}
		else if (getNam() > maukiemdem.getNam()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MAUKIEMDEM)) {
			return false;
		}

		MAUKIEMDEM maukiemdem = (MAUKIEMDEM)obj;

		long primaryKey = maukiemdem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MAUKIEMDEMModelImpl maukiemdemModelImpl = this;

		maukiemdemModelImpl._originalMaXa = maukiemdemModelImpl._maXa;

		maukiemdemModelImpl._originalMaTinh = maukiemdemModelImpl._maTinh;

		maukiemdemModelImpl._originalMaHuyen = maukiemdemModelImpl._maHuyen;

		maukiemdemModelImpl._originalNam = maukiemdemModelImpl._nam;

		maukiemdemModelImpl._setOriginalNam = false;

		maukiemdemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MAUKIEMDEM> toCacheModel() {
		MAUKIEMDEMCacheModel maukiemdemCacheModel = new MAUKIEMDEMCacheModel();

		maukiemdemCacheModel.id = getId();

		maukiemdemCacheModel.maXa = getMaXa();

		String maXa = maukiemdemCacheModel.maXa;

		if ((maXa != null) && (maXa.length() == 0)) {
			maukiemdemCacheModel.maXa = null;
		}

		maukiemdemCacheModel.maTinh = getMaTinh();

		String maTinh = maukiemdemCacheModel.maTinh;

		if ((maTinh != null) && (maTinh.length() == 0)) {
			maukiemdemCacheModel.maTinh = null;
		}

		maukiemdemCacheModel.maHuyen = getMaHuyen();

		String maHuyen = maukiemdemCacheModel.maHuyen;

		if ((maHuyen != null) && (maHuyen.length() == 0)) {
			maukiemdemCacheModel.maHuyen = null;
		}

		maukiemdemCacheModel.nam = getNam();

		maukiemdemCacheModel.tongSoHGD = getTongSoHGD();

		maukiemdemCacheModel.soMauNgauNhien = getSoMauNgauNhien();

		maukiemdemCacheModel.soMauDuPhong = getSoMauDuPhong();

		maukiemdemCacheModel.tongSoMau = getTongSoMau();

		maukiemdemCacheModel.soMauHVS = getSoMauHVS();

		maukiemdemCacheModel.soMauCoNhaTieu = getSoMauCoNhaTieu();

		maukiemdemCacheModel.soMauKiemDem = getSoMauKiemDem();

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			maukiemdemCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			maukiemdemCacheModel.ngayTao = Long.MIN_VALUE;
		}

		maukiemdemCacheModel.userId = getUserId();

		return maukiemdemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", maXa=");
		sb.append(getMaXa());
		sb.append(", maTinh=");
		sb.append(getMaTinh());
		sb.append(", maHuyen=");
		sb.append(getMaHuyen());
		sb.append(", nam=");
		sb.append(getNam());
		sb.append(", tongSoHGD=");
		sb.append(getTongSoHGD());
		sb.append(", soMauNgauNhien=");
		sb.append(getSoMauNgauNhien());
		sb.append(", soMauDuPhong=");
		sb.append(getSoMauDuPhong());
		sb.append(", tongSoMau=");
		sb.append(getTongSoMau());
		sb.append(", soMauHVS=");
		sb.append(getSoMauHVS());
		sb.append(", soMauCoNhaTieu=");
		sb.append(getSoMauCoNhaTieu());
		sb.append(", soMauKiemDem=");
		sb.append(getSoMauKiemDem());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.sol.ns.maungaunhien.dao.model.MAUKIEMDEM");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maXa</column-name><column-value><![CDATA[");
		sb.append(getMaXa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maTinh</column-name><column-value><![CDATA[");
		sb.append(getMaTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maHuyen</column-name><column-value><![CDATA[");
		sb.append(getMaHuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nam</column-name><column-value><![CDATA[");
		sb.append(getNam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tongSoHGD</column-name><column-value><![CDATA[");
		sb.append(getTongSoHGD());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soMauNgauNhien</column-name><column-value><![CDATA[");
		sb.append(getSoMauNgauNhien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soMauDuPhong</column-name><column-value><![CDATA[");
		sb.append(getSoMauDuPhong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tongSoMau</column-name><column-value><![CDATA[");
		sb.append(getTongSoMau());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soMauHVS</column-name><column-value><![CDATA[");
		sb.append(getSoMauHVS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soMauCoNhaTieu</column-name><column-value><![CDATA[");
		sb.append(getSoMauCoNhaTieu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soMauKiemDem</column-name><column-value><![CDATA[");
		sb.append(getSoMauKiemDem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MAUKIEMDEM.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MAUKIEMDEM.class
		};
	private long _id;
	private String _maXa;
	private String _originalMaXa;
	private String _maTinh;
	private String _originalMaTinh;
	private String _maHuyen;
	private String _originalMaHuyen;
	private int _nam;
	private int _originalNam;
	private boolean _setOriginalNam;
	private int _tongSoHGD;
	private int _soMauNgauNhien;
	private int _soMauDuPhong;
	private int _tongSoMau;
	private int _soMauHVS;
	private int _soMauCoNhaTieu;
	private int _soMauKiemDem;
	private Date _ngayTao;
	private long _userId;
	private String _userUuid;
	private long _columnBitmask;
	private MAUKIEMDEM _escapedModel;
}