/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.dtt.cmon.dm.dao.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import vn.dtt.cmon.dm.dao.model.DATAGROUP;
import vn.dtt.cmon.dm.dao.service.DATAGROUPService;
import vn.dtt.cmon.dm.dao.service.persistence.DATAGROUPPersistence;
import vn.dtt.cmon.dm.dao.service.persistence.DATAITEMFinder;
import vn.dtt.cmon.dm.dao.service.persistence.DATAITEMPersistence;
import vn.dtt.cmon.dm.dao.service.persistence.DM_THONXOMPersistence;
import vn.dtt.cmon.dm.dao.service.persistence.NAVIGATIONPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the d a t a g r o u p remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link vn.dtt.cmon.dm.dao.service.impl.DATAGROUPServiceImpl}.
 * </p>
 *
 * @author khoa.vu
 * @see vn.dtt.cmon.dm.dao.service.impl.DATAGROUPServiceImpl
 * @see vn.dtt.cmon.dm.dao.service.DATAGROUPServiceUtil
 * @generated
 */
public abstract class DATAGROUPServiceBaseImpl extends BaseServiceImpl
	implements DATAGROUPService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link vn.dtt.cmon.dm.dao.service.DATAGROUPServiceUtil} to access the d a t a g r o u p remote service.
	 */

	/**
	 * Returns the d a t a g r o u p local service.
	 *
	 * @return the d a t a g r o u p local service
	 */
	public vn.dtt.cmon.dm.dao.service.DATAGROUPLocalService getDATAGROUPLocalService() {
		return datagroupLocalService;
	}

	/**
	 * Sets the d a t a g r o u p local service.
	 *
	 * @param datagroupLocalService the d a t a g r o u p local service
	 */
	public void setDATAGROUPLocalService(
		vn.dtt.cmon.dm.dao.service.DATAGROUPLocalService datagroupLocalService) {
		this.datagroupLocalService = datagroupLocalService;
	}

	/**
	 * Returns the d a t a g r o u p remote service.
	 *
	 * @return the d a t a g r o u p remote service
	 */
	public vn.dtt.cmon.dm.dao.service.DATAGROUPService getDATAGROUPService() {
		return datagroupService;
	}

	/**
	 * Sets the d a t a g r o u p remote service.
	 *
	 * @param datagroupService the d a t a g r o u p remote service
	 */
	public void setDATAGROUPService(
		vn.dtt.cmon.dm.dao.service.DATAGROUPService datagroupService) {
		this.datagroupService = datagroupService;
	}

	/**
	 * Returns the d a t a g r o u p persistence.
	 *
	 * @return the d a t a g r o u p persistence
	 */
	public DATAGROUPPersistence getDATAGROUPPersistence() {
		return datagroupPersistence;
	}

	/**
	 * Sets the d a t a g r o u p persistence.
	 *
	 * @param datagroupPersistence the d a t a g r o u p persistence
	 */
	public void setDATAGROUPPersistence(
		DATAGROUPPersistence datagroupPersistence) {
		this.datagroupPersistence = datagroupPersistence;
	}

	/**
	 * Returns the d a t a i t e m local service.
	 *
	 * @return the d a t a i t e m local service
	 */
	public vn.dtt.cmon.dm.dao.service.DATAITEMLocalService getDATAITEMLocalService() {
		return dataitemLocalService;
	}

	/**
	 * Sets the d a t a i t e m local service.
	 *
	 * @param dataitemLocalService the d a t a i t e m local service
	 */
	public void setDATAITEMLocalService(
		vn.dtt.cmon.dm.dao.service.DATAITEMLocalService dataitemLocalService) {
		this.dataitemLocalService = dataitemLocalService;
	}

	/**
	 * Returns the d a t a i t e m remote service.
	 *
	 * @return the d a t a i t e m remote service
	 */
	public vn.dtt.cmon.dm.dao.service.DATAITEMService getDATAITEMService() {
		return dataitemService;
	}

	/**
	 * Sets the d a t a i t e m remote service.
	 *
	 * @param dataitemService the d a t a i t e m remote service
	 */
	public void setDATAITEMService(
		vn.dtt.cmon.dm.dao.service.DATAITEMService dataitemService) {
		this.dataitemService = dataitemService;
	}

	/**
	 * Returns the d a t a i t e m persistence.
	 *
	 * @return the d a t a i t e m persistence
	 */
	public DATAITEMPersistence getDATAITEMPersistence() {
		return dataitemPersistence;
	}

	/**
	 * Sets the d a t a i t e m persistence.
	 *
	 * @param dataitemPersistence the d a t a i t e m persistence
	 */
	public void setDATAITEMPersistence(DATAITEMPersistence dataitemPersistence) {
		this.dataitemPersistence = dataitemPersistence;
	}

	/**
	 * Returns the d a t a i t e m finder.
	 *
	 * @return the d a t a i t e m finder
	 */
	public DATAITEMFinder getDATAITEMFinder() {
		return dataitemFinder;
	}

	/**
	 * Sets the d a t a i t e m finder.
	 *
	 * @param dataitemFinder the d a t a i t e m finder
	 */
	public void setDATAITEMFinder(DATAITEMFinder dataitemFinder) {
		this.dataitemFinder = dataitemFinder;
	}

	/**
	 * Returns the d m_ t h o n x o m local service.
	 *
	 * @return the d m_ t h o n x o m local service
	 */
	public vn.dtt.cmon.dm.dao.service.DM_THONXOMLocalService getDM_THONXOMLocalService() {
		return dm_thonxomLocalService;
	}

	/**
	 * Sets the d m_ t h o n x o m local service.
	 *
	 * @param dm_thonxomLocalService the d m_ t h o n x o m local service
	 */
	public void setDM_THONXOMLocalService(
		vn.dtt.cmon.dm.dao.service.DM_THONXOMLocalService dm_thonxomLocalService) {
		this.dm_thonxomLocalService = dm_thonxomLocalService;
	}

	/**
	 * Returns the d m_ t h o n x o m persistence.
	 *
	 * @return the d m_ t h o n x o m persistence
	 */
	public DM_THONXOMPersistence getDM_THONXOMPersistence() {
		return dm_thonxomPersistence;
	}

	/**
	 * Sets the d m_ t h o n x o m persistence.
	 *
	 * @param dm_thonxomPersistence the d m_ t h o n x o m persistence
	 */
	public void setDM_THONXOMPersistence(
		DM_THONXOMPersistence dm_thonxomPersistence) {
		this.dm_thonxomPersistence = dm_thonxomPersistence;
	}

	/**
	 * Returns the n a v i g a t i o n local service.
	 *
	 * @return the n a v i g a t i o n local service
	 */
	public vn.dtt.cmon.dm.dao.service.NAVIGATIONLocalService getNAVIGATIONLocalService() {
		return navigationLocalService;
	}

	/**
	 * Sets the n a v i g a t i o n local service.
	 *
	 * @param navigationLocalService the n a v i g a t i o n local service
	 */
	public void setNAVIGATIONLocalService(
		vn.dtt.cmon.dm.dao.service.NAVIGATIONLocalService navigationLocalService) {
		this.navigationLocalService = navigationLocalService;
	}

	/**
	 * Returns the n a v i g a t i o n persistence.
	 *
	 * @return the n a v i g a t i o n persistence
	 */
	public NAVIGATIONPersistence getNAVIGATIONPersistence() {
		return navigationPersistence;
	}

	/**
	 * Sets the n a v i g a t i o n persistence.
	 *
	 * @param navigationPersistence the n a v i g a t i o n persistence
	 */
	public void setNAVIGATIONPersistence(
		NAVIGATIONPersistence navigationPersistence) {
		this.navigationPersistence = navigationPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return DATAGROUP.class;
	}

	protected String getModelClassName() {
		return DATAGROUP.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = datagroupPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = vn.dtt.cmon.dm.dao.service.DATAGROUPLocalService.class)
	protected vn.dtt.cmon.dm.dao.service.DATAGROUPLocalService datagroupLocalService;
	@BeanReference(type = vn.dtt.cmon.dm.dao.service.DATAGROUPService.class)
	protected vn.dtt.cmon.dm.dao.service.DATAGROUPService datagroupService;
	@BeanReference(type = DATAGROUPPersistence.class)
	protected DATAGROUPPersistence datagroupPersistence;
	@BeanReference(type = vn.dtt.cmon.dm.dao.service.DATAITEMLocalService.class)
	protected vn.dtt.cmon.dm.dao.service.DATAITEMLocalService dataitemLocalService;
	@BeanReference(type = vn.dtt.cmon.dm.dao.service.DATAITEMService.class)
	protected vn.dtt.cmon.dm.dao.service.DATAITEMService dataitemService;
	@BeanReference(type = DATAITEMPersistence.class)
	protected DATAITEMPersistence dataitemPersistence;
	@BeanReference(type = DATAITEMFinder.class)
	protected DATAITEMFinder dataitemFinder;
	@BeanReference(type = vn.dtt.cmon.dm.dao.service.DM_THONXOMLocalService.class)
	protected vn.dtt.cmon.dm.dao.service.DM_THONXOMLocalService dm_thonxomLocalService;
	@BeanReference(type = DM_THONXOMPersistence.class)
	protected DM_THONXOMPersistence dm_thonxomPersistence;
	@BeanReference(type = vn.dtt.cmon.dm.dao.service.NAVIGATIONLocalService.class)
	protected vn.dtt.cmon.dm.dao.service.NAVIGATIONLocalService navigationLocalService;
	@BeanReference(type = NAVIGATIONPersistence.class)
	protected NAVIGATIONPersistence navigationPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private DATAGROUPServiceClpInvoker _clpInvoker = new DATAGROUPServiceClpInvoker();
}